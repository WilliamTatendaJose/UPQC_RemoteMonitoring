@page "/energyexports/delete"
@inject UPQC_RemoteMonitoring.Data.ApplicationDbContext DB
@using UPQC_RemoteMonitoring.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>EnergyExport</h4>
    <hr />
    @if (energyexport is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">EnergyExported</dt>
            <dd class="col-sm-10">@energyexport.EnergyExported</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Date</dt>
            <dd class="col-sm-10">@energyexport.Date</dd>
        </dl>
        <EditForm method="post" Model="energyexport" OnValidSubmit="DeleteEnergyExport" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(energyexport is null)">Delete</button> |
            <a href="/energyexports">Back to List</a>
        </EditForm>
    }
</div>

@code {
    EnergyExport? energyexport;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        energyexport = await DB.EnergyExport.FirstOrDefaultAsync(m => m.Id == Id);

        if (energyexport is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteEnergyExport()
    {
        DB.EnergyExport.Remove(energyexport!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/energyexports");
    }
}
