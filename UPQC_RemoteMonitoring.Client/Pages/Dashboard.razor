@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.FluentUI.AspNetCore.Components
@using Syncfusion.Blazor.Charts
@rendermode InteractiveAuto
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]


@code {

	private double Voltage;
	private double Current;
	private double Power;
	private double Energy;
	private double PowerFactor;
	private DateTime Timestamp;
}

@foreach (var item in messages)
{
	Voltage = item.Voltage;
	Current = item.Current;
	Power = item.Power;
	PowerFactor = item.PowerFactor;
	Energy = item.Energy;
	Timestamp = item.Timestamp;
}
<h3>Monitor Live System Parameters</h3>

<div class="row" style="display: flex; flex-wrap: nowrap; justify-content: space-between; margin-bottom: 20px;">
	<FluentCard style="flex-basis: 33.33%; margin: 10px; background-color: #f7f7f7; border-radius: 10px;" Width="200px" Height="100px">
		<h5 style="margin-top: 0;">Power Factor</h5>
		<FluentDivider Style="width: 100%;" Role="DividerRole.Presentation"></FluentDivider>
		<h5 style="color: #666; font-weight: normal;">@PowerFactor</h5>
	</FluentCard>
	<FluentCard style="flex-basis: 33.33%; margin: 10px; background-color: #f7f7f7; border-radius: 10px;" Width="200px" Height="100px">
		<h5 style="margin-top: 0;">Current Energy Export</h5>
		<FluentDivider Style="width: 100%;" Role="DividerRole.Presentation"></FluentDivider>
		<h5 style="color: #666; font-weight: normal;">@Energy</h5>
	</FluentCard>
	<FluentCard style="flex-basis: 33.33%; margin: 10px; background-color: #f7f7f7; border-radius: 10px;" Width="200px" Height="100px">
		<h5 style="margin-top: 0;">Connection Status</h5>
		<FluentDivider Style="width: 100%;" Role="DividerRole.Presentation"></FluentDivider>
		<h5 style="color: #666; font-weight: normal;">@hubConnection.State</h5>
	</FluentCard>
</div>

<FluentCard Width="100%" style="margin: 10px; background-color: #f7f7f7; border-radius: 10px;" Height="400px">
	<SfChart Title="System Voltage" Width="100%">
		<ChartPrimaryXAxis LabelPlacement="LabelPlacement.OnTicks" LabelIntersectAction="LabelIntersectAction.Rotate45" ValueType="Syncfusion.Blazor.Charts.ValueType.Category"></ChartPrimaryXAxis>
		<ChartPrimaryYAxis Title="Voltage/V"></ChartPrimaryYAxis>
		<ChartSeriesCollection>
			<ChartSeries DataSource="@messages" XName="Timestamp" YName="Voltage" Type="ChartSeriesType.Line"></ChartSeries>
		</ChartSeriesCollection>
	</SfChart>
</FluentCard>

<FluentCard Width="100%" style="margin: 10px; background-color: #f7f7f7; border-radius: 10px;" Height="400px">
	<SfChart Title="System Current Draw" Width="100%">
		<ChartPrimaryXAxis LabelPlacement="LabelPlacement.OnTicks" LabelIntersectAction="LabelIntersectAction.Rotate45" ValueType="Syncfusion.Blazor.Charts.ValueType.Category"></ChartPrimaryXAxis>
		<ChartPrimaryYAxis Title="Current/A"></ChartPrimaryYAxis>
		<ChartSeriesCollection>
			<ChartSeries DataSource="@messages" XName="Timestamp" YName="Current" Type="ChartSeriesType.Line"></ChartSeries>
		</ChartSeriesCollection>
	</SfChart>
</FluentCard>

<FluentCard Width="100%" style="margin: 10px; background-color: #f7f7f7; border-radius: 10px;" Height="400px">
	<SfChart Title="Power Usage" Width="100%">
		<ChartPrimaryXAxis LabelPlacement="LabelPlacement.OnTicks" LabelIntersectAction="LabelIntersectAction.Rotate45" ValueType="Syncfusion.Blazor.Charts.ValueType.Category"></ChartPrimaryXAxis>
		<ChartPrimaryYAxis Title="Power/W"></ChartPrimaryYAxis>
		<ChartSeriesCollection>
			<ChartSeries DataSource="@messages" XName="Timestamp" YName="Power" Type="ChartSeriesType.Line"></ChartSeries>
		</ChartSeriesCollection>
	</SfChart>
</FluentCard>
<style>
	@@media (max-width: 768px) {
		.row {
			flex-direction: column;
		}

		.FluentCard {
			width: 100%;
			height: auto;
			margin-bottom: 20px;
		}

		.SfChart {
			width: 100%;
			height: 300px;
		}
	}

	@@media (max-width: 480px) {
		.FluentCard {
			margin: 10px 0;
		}

		.SfChart {
			height: 200px;
		}
	}

</style>



@code {


	private HubConnection hubConnection; //for connecting to SignalR
	private List<TelemetryPayload> messages = new(); //List of messages to display

	private readonly HttpClient _httpClient = new HttpClient(); //HttpClient for posting messages

	private readonly string functionAppBaseUri = "http://localhost:7059/api/"; //URL for function app. Leave this as is for now.

	protected override async Task OnInitializedAsync() //actions to do when the page is initialized
	{
	//create a hub connection to the function app as we'll go via the function for everything SignalR.
		hubConnection = new HubConnectionBuilder()
			.WithUrl(functionAppBaseUri)
			.Build();

        //Registers handler that will be invoked when the hub method with the specified method name is invoked.
		hubConnection.On<TelemetryPayload>("telemetryPayload", (telemetryPayload) =>
		{
		//telemetryPayload.Timestamp = DateTime.Now;
			messages.Add(telemetryPayload);
			StateHasChanged(); //This tells Blazor that the UI needs to be updated
		});
		try
		{
			await hubConnection.StartAsync(); //start connection!
		}
		catch (Exception ex)
		{
			Console.WriteLine("error starting hub, please try again: +{ex.Message}");
		}
	}



	//Check we're connected
	public bool IsConnected =>
		hubConnection.State == HubConnectionState.Connected;



	public class TelemetryPayload
	{


		public double Voltage { get; set; }
		public double Current { get; set; }
		public double Energy { get; set; }
		public double PowerFactor { get; set; }
		public double Power { get; set; }
		public DateTime Timestamp { get; set; }
		
    }

}